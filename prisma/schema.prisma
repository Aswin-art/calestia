// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id             String      @id @default(cuid())
  wallet_address String      @unique
  subscription   Int?
  UserVotes      UserVotes[]
  Sessions       Sessions[]

  @@map("users")
}

model Proposals {
  id          String      @id @default(cuid())
  title       String
  description String
  upvote      Int
  downvote    Int
  UserVotes   UserVotes[]

  @@map("proposals")
}

model UserVotes {
  id          String    @id @default(cuid())
  user_id     String
  user        Users     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  proposal_id String
  proposal    Proposals @relation(fields: [proposal_id], references: [id], onDelete: Cascade)
  votes       Boolean

  @@map("user_votes")
}

model Sessions {
  id      String  @id @default(cuid())
  user_id String
  user    Users   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  title   String
  Chats   Chats[]
}

model Chats {
  id         String   @id @default(cuid())
  session_id String
  session    Sessions @relation(fields: [session_id], references: [id], onDelete: Cascade)
  question   String
  answer     String
}
